name: Performance Benchmark

on:
  pull_request:
    branches:
      - main
      - master
      - develop
  workflow_dispatch:

jobs:
  performance-benchmark:
    name: Performance Benchmark (lifetime_2_10)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.1
      
      - name: Verify Zig installation
        run: zig version
      
      - name: Clear Zig cache and fetch dependencies
        run: |
          echo "Clearing Zig cache and fetching dependencies..."
          rm -rf ~/.cache/zig
          rm -rf .zig-cache
          zig fetch --save=zig_poseidon https://github.com/blockblaz/zig-poseidon/archive/main.tar.gz
          echo "Dependencies fetched successfully"
      
      - name: Build with optimizations
        run: |
          echo "Building with ReleaseFast optimizations..."
          zig build -Doptimize=ReleaseFast
          echo "Build completed successfully"
      
      - name: Run benchmark (lifetime_2_10 only)
        id: benchmark
        run: |
          echo "🚀 Running performance benchmark..."
          echo "Configuration: lifetime_2_10 (1,024 signatures)"
          echo "Operations: KeyGen, Sign, Verify"
          echo ""
          
          # Run benchmark and capture output
          if zig build benchmark -Doptimize=ReleaseFast 2>&1 | tee benchmark_results.txt; then
            echo "Using zig build benchmark target"
          elif [ -f scripts/benchmark.zig ]; then
            echo "Using scripts/benchmark.zig"
            zig build-exe scripts/benchmark.zig -OReleaseFast --dep hash-zig -Mhash-zig=src/root.zig --name benchmark
            ./benchmark 2>&1 | tee benchmark_results.txt
          else
            echo "❌ No benchmark target found"
            exit 1
          fi
          
          echo ""
          echo "✅ Benchmark completed"
          
          # Extract metrics
          KEYGEN=$(grep "BENCHMARK_RESULT:.*keygen:" benchmark_results.txt | tail -1 | cut -d: -f3 || echo "N/A")
          SIGN=$(grep "BENCHMARK_RESULT:.*sign:" benchmark_results.txt | tail -1 | cut -d: -f3 || echo "N/A")
          VERIFY=$(grep "BENCHMARK_RESULT:.*verify:" benchmark_results.txt | tail -1 | cut -d: -f3 || echo "N/A")
          
          echo "keygen=$KEYGEN" >> $GITHUB_OUTPUT
          echo "sign=$SIGN" >> $GITHUB_OUTPUT
          echo "verify=$VERIFY" >> $GITHUB_OUTPUT
      
      - name: Display results
        run: |
          echo "## 🚀 Performance Benchmark Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Configuration:** lifetime_2_10 (1,024 signatures)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Operation | Time (seconds) |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|----------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Key Generation | ${{ steps.benchmark.outputs.keygen }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Sign | ${{ steps.benchmark.outputs.sign }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Verify | ${{ steps.benchmark.outputs.verify }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note:** Times measured with ReleaseFast optimization on ubuntu-latest" >> $GITHUB_STEP_SUMMARY
          
          # Console output
          echo "=============================="
          echo "Performance Results:"
          echo "=============================="
          echo "KeyGen:  ${{ steps.benchmark.outputs.keygen }}s"
          echo "Sign:    ${{ steps.benchmark.outputs.sign }}s"
          echo "Verify:  ${{ steps.benchmark.outputs.verify }}s"
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: benchmark-results
          path: benchmark_results.txt
          retention-days: 30
