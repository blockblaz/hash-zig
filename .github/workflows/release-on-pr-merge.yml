name: Release on PR Merge

on:
  pull_request:
    types: [closed]
    branches:
      - master
      - main

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if this is a release PR
        id: check
        run: |
          set -euo pipefail
          PR_TITLE="${{ github.event.pull_request.title }}"
          if echo "$PR_TITLE" | grep -E "^Release v[0-9]+\.[0-9]+\.[0-9]+$" >/dev/null; then
            echo "is_release=true" >> $GITHUB_OUTPUT
            # Extract version from PR title
            VERSION=$(echo "$PR_TITLE" | sed -E 's/^Release v([0-9]+\.[0-9]+\.[0-9]+)$/\1/')
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Found release PR for version: $VERSION"
          else
            echo "is_release=false" >> $GITHUB_OUTPUT
            echo "Not a release PR, skipping"
          fi

      - name: Create tag and release
        if: steps.check.outputs.is_release == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          VERSION="${{ steps.check.outputs.version }}"
          
          # Create and push tag
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -a "v${VERSION}" -m "Release v${VERSION}" || echo "Tag exists"
          git push origin "v${VERSION}" || echo "Tag already pushed"

      - name: Create GitHub Release
        if: steps.check.outputs.is_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.check.outputs.version }}
          name: hash-zig v${{ steps.check.outputs.version }}
          body: |
            ## Release v${{ steps.check.outputs.version }}
            
            Automated release for hash-zig.
            
            **Version:** v${{ steps.check.outputs.version }}
            
            ### Changes
            This release includes all commits since the previous release.
            
            ### Installation
            ```zig
            .{
                .name = .my_project,
                .version = "0.1.0",
                .dependencies = .{
                    .@"hash-zig" = .{
                        .url = "https://github.com/ch4r10t33r/hash-zig/archive/refs/tags/v${{ steps.check.outputs.version }}.tar.gz",
                        .hash = "1220...", // Will be generated by zig build
                    },
                },
            }
            ```
          draft: false
          prerelease: false

      - name: Clean up release branch
        if: steps.check.outputs.is_release == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          VERSION="${{ steps.check.outputs.version }}"
          RELEASE_BRANCH="release/v${VERSION}"
          
          # Delete the release branch
          git push origin --delete ${RELEASE_BRANCH} || echo "Branch already deleted or doesn't exist"
